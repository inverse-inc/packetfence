<?xml version="1.0" encoding="utf-8"?>
<policy [% version_xml %] [% target_xml %] [% priority_xml %]>
<!-- source: https://firewalld.org/documentation/man-pages/firewalld.policy.html -->
<!--
     NOTE: VARIABLES ending with _xml are optional and need to be rewritten in xml format before.
Looks like some optional variable can be defined with empty string, like version in policy tag


The following rules apply to policy priorities:
* policies with negative priorities apply before rules in zones
* policies with positive priorities apply after rules in zones
This is especially important to understand because many zones have catch all accept/drop/reject. This applies to zone with a -\-set-target that is not default.
* priority 0 is reserved and not usable

-->

  [% FOREACH ingress_policy IN all_ingress_policies %]
    <ingress-policy name="[% ingress_name %]"/>
  [% END %]
  [% FOREACH egress_policy IN all_egress_policies %]
    <egress-policy name="[% egress_name %]"/>
  [% END %]

  [% IF short != "" %]
    <short>[% short %]</short>
  [% END %]

  [% IF description != "" %]
    <description>[% description %]</description>
  [% END %]

  [% FOREACH service IN all_services %]
    <service name="[% service %]"/>
  [% END %]

  [% FOREACH port IN all_ports %]
    <port port="[% port.port %]" protocol="[% port.type %]"/>
  [% END %]

  [% FOREACH protocol IN all_protocols %]
    <protocol value="[% protocol %]"/>
  [% END %]

  [% FOREACH icmp_block IN all_icmpblocks %]
    <icmp-block name="[% icmp_block %]"/>
  [% END %]

  [% IF masquerade == "yes" %]
    <masquerade/>
  [% END %]

  [% FOREACH forward_port IN all_forwardports %]
    <forward-port port="[% forward_port.port %]" protocol="[% forward_port.type %]" [% forward_port.to_port_xml %] [% forward_port.to_addr_xml %] />
  [% END %]

  [% FOREACH source_port IN all_sourceports %]
    <source-port port="[% source_port.port %]" protocol="[% source_port.type %]"/>
  [% END %]

  [% FOREACH rule IN all_rules %]
    <!-- First Match = First WIN -->
    <!-- also read: https://firewalld.org/documentation/man-pages/firewalld.richlanguage.html -->
    <rule [% rule.family_xml %] [% rule.priority_xml %] >
    [% IF ( rule.source.name == "address" ) AND ( rule.source.mask != "") %]
        <source address="[% rule.source.address %]/[% rule.source.mask %]" [% rule.source.invert_xml %]/> 
    [% ELSIF rule.source.name == "address" %]
        <source address="[% rule.source.address %]" [% rule.source.invert_xml %]/> 
    [% ELSIF rule.source.name == "mac" %]
        <source mac="[% rule.source.mac %]" [% rule.source.invert_xml %]/> ]
    [% ELSIF rule.source.name == "ipset" %]
        <source ipset="[% rule.source.ipset %]" [% rule.source.invert_xml %]/>
    [% END %]

    [% IF rule.destination.name == "address" %]
        <destination address="[% rule.destination.address %]" [% rule.destination.invert_xml %]/>
    [% ELSIF rule.destination.name == "ipset" %]
        <destination ipset="[% rule.destination.ipset %]" [% rule.destination.invert_xml %]/>
    [% END %]

    [% FOREACH match_rule IN match_rules %]
      [% IF match_rule.name == "service" %]
        <service name="[% match_rule.service %]"/>
      [% ELSIF match_rule.name == "port" %]
        <port port="[% match_rule.port %]" protocol="[% match_rule.type %]"/>
      [% ELSIF match_rule.name == "protocol" %]
        <protocol value="match_rule.protocol %]"/>
      [% ELSIF match_rule.name == "icmp_block" %]
        <icmp-block name="[% match_rule.icmp_type %]"/>
      [% ELSIF match_rule.name == "icmp_type" %]
        <icmp-type name="[% match_rule.icmp_type %]"/>
      [% ELSIF match_rule.name == "masquerade" %]
        <masquerade/>
      [% ELSIF match_rule.name == "forward_port" %]
        <forward-port port="[% match_rule.port %]" protocol="[% match_rule.type %]" [% match_rule.to_port_xml %] [% match_rule.to_addr_xml %] />
      [% END %]
    [% END %]

    [% IF rule.log_rule.name == "log" %]
        <log [% rule.log_rule.prefix_xml %] [% rule.log_rule.level_xml %] > [% rule.log_rule.limit_value_xml %] </log>
    [% ELSIF rule.log_rule.name == "nflog" %]
        <nflog [% rule.log_rule.group_xml %] [% rule.log_rule.prefix_xml %] [% rule.log_rule.queue_size_xml %] > [% rule.log_rule.limit_value_xml %]</nflog>
    [% END %]

    [% IF rule.audit_xml != "" %]
        <audit> [% rule.audit_xml %]</audit>
    [% END %]

    [% IF rule.action.name == "accept" %]
        <accept> [% rule.action.limit_value %]</accept>
    [% ELSIF rule.action.name == "reject" %]
        <reject [% rule.action.type_xml %] > [% rule.action.limit_value_xml %] </reject>
    [% ELSIF rule.action.name == "drop" %]
        <drop> [% rule.action.limit_value_xml %] </drop>
    [% ELSIF rule.action.name == "mark" %]
        <mark [% rule.action.set_xml %] > [% rule.action.limit_value_xml %] </mark>
    [% END %]
    </rule>
  [% END %]
</policy>
