#!/bin/sh
# preinst script for packetfence
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <new-preinst> `install'
#        * <new-preinst> `install' <old-version>
#        * <new-preinst> `upgrade' <old-version>
#        * <old-preinst> `abort-upgrade' <new-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

disable_service_if_exists() {
    SERVICE=$1
    NOTFOUND=`set +e;systemctl list-units --full -all --state=not-found| grep -Fq "$SERVICE";echo $?`
    if [ $NOTFOUND -eq 0 ]; then
        return 0
    fi
    NUM=`set +e;systemctl list-units --full -all | grep -Fq "$SERVICE";echo $?`
    if [ $NUM -eq 0 ]; then
        systemctl disable $SERVICE
    fi
}

stop_service_if_exists() {
    SERVICE=$1
    NUM=`set +e;invoke-rc.d --quiet --query $SERVICE stop;echo $?`
    if [ $NUM -eq 104 ]; then
        invoke-rc.d $SERVICE stop
    fi
}

# Remove a no-longer used conffile; taken from http://wiki.debian.org/DpkgConffileHandling
rm_conffile() {
    CONFFILE="$1"

    if [ -e "$CONFFILE" ]; then
        md5sum="`md5sum \"$CONFFILE\" | sed -e \"s/ .*//\"`"
        old_md5sum="`dpkg-query -W -f='${Conffiles}' $PKGNAME | sed -n -e \"\\\\' $CONFFILE'{s/ obsolete$//;s/.* //p}\"`"
        if [ "$md5sum" != "$old_md5sum" ]; then
            echo "Obsolete conffile $CONFFILE has been modified by you."
            echo "Saving as $CONFFILE.dpkg-bak ..."
            mv -f "$CONFFILE" "$CONFFILE".dpkg-bak
        else
            echo "Removing obsolete conffile $CONFFILE ..."
            rm -f "$CONFFILE"
        fi
    fi
}

case "$1" in
    install)
        stop_service_if_exists packetfence
        if [ -z "$(getent passwd pf)" ]; then
            if ! /usr/bin/id -g pf &>/dev/null; then
                useradd -U -r -d "/usr/local/pf" -s /bin/sh -c "PacketFence" -M pf
            else
                useradd -r -d "/usr/local/pf" -s /bin/sh -c "PacketFence" -M pf -g pf
            fi
            echo "create pf user"
        else
                echo "pf user already exist"
        fi
        usermod pf -a -G fingerbank
        usermod -aG pf mysql
        usermod -aG pf netdata

        # Firewalld handeling
        set +e
        # Related to firewalld.service
        /bin/systemctl stop firewalld.service
        /bin/systemctl disable firewalld.service
        /bin/systemctl mask firewalld.service
        /bin/rm -rf /usr/lib/systemd/system/firewalld.service
        /bin/systemctl daemon-reload
        set -e

        # prevent conflicting mariadb service from starting 
        /bin/systemctl mask mariadb
        /bin/systemctl stop mariadb
        # journald 
        /usr/bin/install -d -g systemd-journal /var/log/journal
        /bin/setfacl -R -nm g:adm:rx,d:g:adm:rx /var/log/journal
        echo "RateLimitInterval=0" >> /etc/systemd/journald.conf
        echo "RateLimitBurst=0" >> /etc/systemd/journald.conf
        echo "ForwardToWall=no" >> /etc/systemd/journald.conf
        echo "SystemMaxUse=1G" >> /etc/systemd/journald.conf
        echo "SystemKeepFree=1G" >> /etc/systemd/journald.conf
        echo "Restarting journald to enable persistent logging"
        /bin/systemctl restart systemd-journald

        exit 0
    ;;
    
    upgrade)
        # mv the old raddb dir if upgrading from FreeRADIUS 2
        echo "Upgrading from $2"
        if dpkg --compare-versions "$2" lt "6"; then
          mv /usr/local/pf/raddb /usr/local/pf/raddb2
          test -d /usr/local/pf/var/cache && rmdir --ignore-fail-on-non-empty /usr/local/pf/var/cache
        fi

        if dpkg --compare-versions "$2" lt "7"; then
            # journald 
            /usr/bin/install -d -g systemd-journal /var/log/journal
            /bin/setfacl -R -nm g:adm:rx,d:g:adm:rx /var/log/journal
            echo "RateLimitInterval=0" >> /etc/systemd/journald.conf
            echo "RateLimitBurst=0" >> /etc/systemd/journald.conf
            echo "ForwardToWall=no" >> /etc/systemd/journald.conf
        fi
        set +e
        /usr/sbin/update-rc.d -f packetfence remove
        stop_service_if_exists pfappserver
        /usr/sbin/update-rc.d -f pfappserver remove
        set -e
        /bin/systemctl isolate packetfence-base.target
        # prevent conflicting mariadb service from starting
        /bin/systemctl mask mariadb
        /bin/systemctl stop mariadb

        # Firewalld handeling
        set +e
        # Related to firewalld.service
        /bin/systemctl stop firewalld.service
        /bin/systemctl disable firewalld.service
        /bin/systemctl mask firewalld.service
        /bin/rm -rf /usr/lib/systemd/system/firewalld.service

        # Related to packetfence-iptables.service
        /bin/systemctl stop packetfence-iptables.service
        disable_service_if_exists packetfence-iptables.service
        /bin/systemctl mask packetfence-iptables.service
        /bin/rm -rf /usr/lib/systemd/system/packetfence-iptables.service

        # Related to packetfence-firewalld
        # for upgrade service needs to be stopped
        /bin/systemctl stop packetfence-firewalld.service
        /bin/systemctl daemon-reload
        set -e

        #Change the uid/gid
        set +e
        id=$(/usr/bin/id -g pf)
        find /usr/local/pf/ -group $id -exec chgrp -h pf {} \;
        id=$(/usr/bin/id -u pf)
        find /usr/local/pf/ -user $id -exec chown -h pf {} \;
        set -e

        usermod pf -a -G fingerbank
        usermod -aG pf mysql
        usermod -aG pf netdata

        disable_service_if_exists packetfence-redis-cache.service
        disable_service_if_exists packetfence-config.service
        disable_service_if_exists packetfence.service
        disable_service_if_exists packetfence-haproxy.service
        disable_service_if_exists packetfence-tc.service
        disable_service_if_exists packetfence-httpd.proxy.service
        disable_service_if_exists packetfence-httpd.collector.service
        exit 0
    ;;
    abort-upgrade)
    ;;

    *)
        echo "preinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
